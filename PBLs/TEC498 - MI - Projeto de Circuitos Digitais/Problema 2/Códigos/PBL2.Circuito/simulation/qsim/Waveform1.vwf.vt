// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/16/2021 22:46:21"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          mainCircuit
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module mainCircuit_vlg_vec_tst();
// constants                                           
// general purpose registers
reg button0;
reg sen0;
reg sen1;
reg sen2;
reg sen3;
reg sen4;
// wires                                               
wire alarme;
wire seg_A;
wire seg_B;
wire seg_C;
wire seg_D;
wire seg_E;
wire seg_F;
wire seg_G;

// assign statements (if any)                          
mainCircuit i1 (
// port map - connection between master ports and signals/registers   
	.alarme(alarme),
	.button0(button0),
	.seg_A(seg_A),
	.seg_B(seg_B),
	.seg_C(seg_C),
	.seg_D(seg_D),
	.seg_E(seg_E),
	.seg_F(seg_F),
	.seg_G(seg_G),
	.sen0(sen0),
	.sen1(sen1),
	.sen2(sen2),
	.sen3(sen3),
	.sen4(sen4)
);
initial 
begin 
#80000 $finish;
end 
endmodule


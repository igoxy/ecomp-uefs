// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/16/2021 11:20:56"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          controlOutputDis
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module controlOutputDis_vlg_vec_tst();
// constants                                           
// general purpose registers
reg BUTTON;
reg ENTRADA_AC;
reg ENTRADA_CO;
reg ENTRADA_RE;
// wires                                               
wire SEG_A;
wire SEG_B;
wire SEG_C;
wire SEG_D;
wire SEG_E;
wire SEG_F;
wire SEG_G;

// assign statements (if any)                          
controlOutputDis i1 (
// port map - connection between master ports and signals/registers   
	.BUTTON(BUTTON),
	.ENTRADA_AC(ENTRADA_AC),
	.ENTRADA_CO(ENTRADA_CO),
	.ENTRADA_RE(ENTRADA_RE),
	.SEG_A(SEG_A),
	.SEG_B(SEG_B),
	.SEG_C(SEG_C),
	.SEG_D(SEG_D),
	.SEG_E(SEG_E),
	.SEG_F(SEG_F),
	.SEG_G(SEG_G)
);
initial 
begin 
#1000000 $finish;
end 

// BUTTON
initial
begin
	repeat(12)
	begin
		BUTTON = 1'b0;
		BUTTON = #40000 1'b1;
		# 40000;
	end
	BUTTON = 1'b0;
end 

// ENTRADA_AC
always
begin
	ENTRADA_AC = 1'b0;
	ENTRADA_AC = #20000 1'b1;
	#20000;
end 

// ENTRADA_CO
always
begin
	ENTRADA_CO = 1'b0;
	ENTRADA_CO = #10000 1'b1;
	#10000;
end 

// ENTRADA_RE
always
begin
	ENTRADA_RE = 1'b0;
	ENTRADA_RE = #5000 1'b1;
	#5000;
end 
endmodule

